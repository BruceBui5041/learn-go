Shard db cho MySQL tham khảo vitess
OAuth cho Go, ory/fosite hay ory/hydrax (Nên xài thư viện thì auth rất quan trong trong microservice, toang n là đi hết)
Xem Effective Go website để biết thêm chi tiết
Bản thân golang là sync language nó sẽ chạy từ trên xuống dưới
Routines nhẹ hơn thread rất nhiều và 1 thread có thể chạy nhiều routines

===========================================
Data racing (common issue): Xảy ra nếu có nhiều routiens ghi liên tục vào 1 biến => kq cuối cũng sẽ không đúng
Dùng Mutex Lock để handle lỗi này sync.RWMutex
Hoặc dùng Chanel để khỏi xử dụng Mutex Lock (recommended)
===========================================

===========================================
Để tăng tốc search trong DB có ralation Many2Many nên đánh index id của table có nhiều record hơn trước
===========================================

PUT là update toàn bộ record còn PATCH thì chỉ update 1 phần thôi
Mỗi request thì sẽ được xử lý trong một routine


Error Handling===========================================
phải có code, message phải dễ hiểu, sử dụng custom code để có thể response message lỗi với nhiều ngôn ngữ, trace_id để tracing lỗi
Xử lý crashes như một cái error bình thường
Cần ẩn đi những sensitive errors, nhưng phải ghi lại log đó để cho người có quyền vào xem và debug
=========================================================


===================================================================================
Keywords:
container.list to get advance list
MutexLock
WaitGroup
Collection List
sqlx golang (Nên xài nếu hiệu năng là ưu tiên cao nhất)